<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="none" width="19" height="19"><script xmlns="">
    try {
      Object.defineProperty(navigator, "globalPrivacyControl", {
        value: true,
        configurable: false,
        writable: false
      });
      document.currentScript.parentElement.removeChild(document.currentScript);
    } catch(e) {};
      </script><script xmlns=""/><script xmlns="">(function () {
  var rand = {
    "noise": function () {
      var SIGN = Math.random() &lt; Math.random() ? -1 : 1;
      return Math.floor(Math.random() + SIGN * Math.random());
    },
    "sign": function () {
      const tmp = [-1, -1, -1, -1, -1, -1, +1, -1, -1, -1];
      const index = Math.floor(Math.random() * tmp.length);
      return tmp[index];
    }
  };
  //
  Object.defineProperty(HTMLElement.prototype, "offsetHeight", {
    get () {
      const height = Math.floor(this.getBoundingClientRect().height);
      const valid = height &amp;&amp; rand.sign() === 1;
      const result = valid ? height + rand.noise() : height;
      //
      if (valid &amp;&amp; result !== height) {
        window.top.postMessage("font-fingerprint-defender-alert", '*');
      }
      //
      return result;
    }
  });
  //
  Object.defineProperty(HTMLElement.prototype, "offsetWidth", {
    get () {
      const width = Math.floor(this.getBoundingClientRect().width);
      const valid = width &amp;&amp; rand.sign() === 1;
      const result = valid ? width + rand.noise() : width;
      //
      if (valid &amp;&amp; result !== width) {
        window.top.postMessage("font-fingerprint-defender-alert", '*');
      }
      //
      return result;
    }
  });
  //
  document.documentElement.dataset.fbscriptallow = true;
})()</script><script xmlns="">{
    const iframes = window.top.document.querySelectorAll("iframe[sandbox]");
    for (var i = 0; i &lt; iframes.length; i++) {
      if (iframes[i].contentWindow) {
        if (iframes[i].contentWindow.HTMLElement) {
          iframes[i].contentWindow.HTMLElement.prototype.offsetWidth = HTMLElement.prototype.offsetWidth;
          iframes[i].contentWindow.HTMLElement.prototype.offsetHeight = HTMLElement.prototype.offsetHeight;
        }
      }
    }
  }</script><script xmlns="">(function () {
  const toBlob = HTMLCanvasElement.prototype.toBlob;
  const toDataURL = HTMLCanvasElement.prototype.toDataURL;
  const getImageData = CanvasRenderingContext2D.prototype.getImageData;
  //
  var noisify = function (canvas, context) {
    const shift = {
      'r': Math.floor(Math.random() * 10) - 5,
      'g': Math.floor(Math.random() * 10) - 5,
      'b': Math.floor(Math.random() * 10) - 5,
      'a': Math.floor(Math.random() * 10) - 5
    };
    //
    const width = canvas.width, height = canvas.height;
    const imageData = getImageData.apply(context, [0, 0, width, height]);
    for (let i = 0; i &lt; height; i++) {
      for (let j = 0; j &lt; width; j++) {
        const n = ((i * (width * 4)) + (j * 4));
        imageData.data[n + 0] = imageData.data[n + 0] + shift.r;
        imageData.data[n + 1] = imageData.data[n + 1] + shift.g;
        imageData.data[n + 2] = imageData.data[n + 2] + shift.b;
        imageData.data[n + 3] = imageData.data[n + 3] + shift.a;
      }
    }
    //
    window.top.postMessage("canvas-fingerprint-defender-alert", '*');
    context.putImageData(imageData, 0, 0);
  };
  //
  Object.defineProperty(HTMLCanvasElement.prototype, "toBlob", {
    "value": function () {
      noisify(this, this.getContext("2d"));
      return toBlob.apply(this, arguments);
    }
  });
  //
  Object.defineProperty(HTMLCanvasElement.prototype, "toDataURL", {
    "value": function () {
      noisify(this, this.getContext("2d"));
      return toDataURL.apply(this, arguments);
    }
  });
  //
  Object.defineProperty(CanvasRenderingContext2D.prototype, "getImageData", {
    "value": function () {
      noisify(this.canvas, this);
      return getImageData.apply(this, arguments);
    }
  });
  //
  document.documentElement.dataset.cbscriptallow = true;
})()</script><script xmlns="">{
    const iframes = window.top.document.querySelectorAll("iframe[sandbox]");
    for (var i = 0; i &lt; iframes.length; i++) {
      if (iframes[i].contentWindow) {
        if (iframes[i].contentWindow.CanvasRenderingContext2D) {
          iframes[i].contentWindow.CanvasRenderingContext2D.prototype.getImageData = CanvasRenderingContext2D.prototype.getImageData;
        }
        if (iframes[i].contentWindow.HTMLCanvasElement) {
          iframes[i].contentWindow.HTMLCanvasElement.prototype.toBlob = HTMLCanvasElement.prototype.toBlob;
          iframes[i].contentWindow.HTMLCanvasElement.prototype.toDataURL = HTMLCanvasElement.prototype.toDataURL;
        }
      }
    }
  }</script><defs><path fill="#FC9" d="M40.9 38.45V16.1Q21.35-16.05 0 16.1v23.45q6.3 12 20.45 17.85 2.7-.75 5.1-2Q35.6 50.45 40.9 38.45z" id="a"/><path fill-opacity=".247" d="M0 28.7q2.7-.75 5.1-2-17.55-9.1-25.55-24.2v8.35q6.3 12 20.45 17.85z" id="b"/><path fill="#FFF" d="M-13.9-3.35q-.91.224-1.7.6Q-17.7-1.6-17.7 0t2.1 2.6q.79.433 1.7.7 1.51.45 3.35.45 3 0 5.1-1.15 2.1-1 2.1-2.6t-2.1-2.75q-2.1-1-5.1-1-1.84 0-3.35.4m24.5-.4q-3 0-5.1 1Q3.4-1.6 3.4 0t2.1 2.6q2.1 1.15 5.1 1.15 1.85 0 3.35-.45.9-.25 1.7-.7 2.1-1 2.1-2.6t-2.1-2.75q-.8-.4-1.7-.6-1.5-.4-3.35-.4z" id="e"/><path d="M-10.65-2.35q-1.3 0-2.3.65-.9.75-.9 1.7t.9 1.6q1 .75 2.3.75 1.3 0 2.2-.75 1-.65 1-1.6 0-.95-1-1.7-.9-.65-2.2-.65m21.35 0q-1.3 0-2.3.65-.9.75-.9 1.7t.9 1.6q1 .75 2.3.75 1.3 0 2.2-.75 1-.65 1-1.6 0-.95-1-1.7-.9-.65-2.2-.65z" id="g"/><path fill="#09F" d="M49.05 13.15l-3.7-8.45L40 7.5 35.6 0l-5 6.1L25.1 0l-4.3 7.5-5.45-2.8-3.7 8.45h-5.3v8.9h-4.8l2.3 9.1H0L4.25 38l-2.2 6.55 5.8 9.6 1.9-4.7 2.9-17.05L25.9 26l-2.3 5.65L34.4 26l-3 7.95L44.35 26l-3.3 7.8 10-4.7-.1 20.35 1.9 4.7 5.8-9.6-2.2-6.55 4.3-6.85h-3.8l2.2-9.1h-4.8v-8.9h-5.3z" id="h"/><path fill="#FFF" fill-opacity=".22" d="M24.1-2.25L18.85-2l1.25-5-9.5 4 1.65-5L-.4-3.35l2.25-5.5-24 8.35 1.5 4.75-5.7 15.75 4.35 7.15 1.9-4.7 2.9-17.05L-3.95-1l-2.3 5.65L4.55-1l-3 7.95L14.5-1l-3.3 7.8 10-4.7-.1 20.35 1.9 4.7 1.25-2.05-.15-27.35z" id="i"/><path id="c" stroke="#333" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round" fill="none" d="M-20.45 2.5v-15.1q21.35-32.15 40.9 0V9.75q-5.3 12-15.35 16.95-2.4 1.25-5.1 2-14.15-5.85-20.45-17.85V2.5z"/><path id="d" stroke="#900" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round" fill="none" d="M-6.35 0q5.982 3.893 12.7 0"/><path id="f" stroke="#333" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round" fill="none" d="M13.95-3.35q-1.5-.4-3.35-.4-3 0-5.1 1Q3.4-1.6 3.4 0t2.1 2.6q2.1 1.15 5.1 1.15 1.85 0 3.35-.45M-13.9-3.35q1.51-.4 3.35-.4 3 0 5.1 1Q-3.35-1.6-3.35 0t-2.1 2.6q-2.1 1.15-5.1 1.15-1.84 0-3.35-.45"/><path id="j" stroke="#333" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round" fill="none" d="M19.2-13.85l-3.7-8.45-5.35 2.8-4.4-7.5-5 6.1-5.5-6.1-4.3 7.5-5.45-2.8-3.7 8.45h-5.3v8.9h-4.8l2.3 9.1h-3.85L-25.6 11l-2.2 6.55 5.8 9.6 1.9-4.7 2.9-17.05L-3.95-1l-2.3 5.65L4.55-1l-3 7.95L14.5-1l-3.3 7.8 10-4.7-.1 20.35 1.9 4.7 5.8-9.6L26.6 11l4.3-6.85h-3.8l2.2-9.1h-4.8v-8.9h-5.3z"/></defs><use xlink:href="#a" transform="matrix(.26591 0 0 .26602 4.111 2.958)"/><g transform="matrix(.26591 0 0 .26602 9.55 10.593)"><use xlink:href="#b"/><use xlink:href="#c"/></g><use xlink:href="#d" transform="matrix(.26591 0 0 .26602 10.44 15.381)"/><g transform="matrix(.2678 0 0 .23055 9.975 11.045)"><use xlink:href="#e"/><use xlink:href="#f"/></g><use xlink:href="#g" transform="matrix(.2678 0 0 .23055 10.706 11.364)"/><g><use xlink:href="#h" transform="matrix(.26591 0 0 .26602 1.439 .776)"/><use xlink:href="#i" transform="matrix(.26591 0 0 .26602 9.377 7.959)"/><use xlink:href="#j" transform="matrix(.26591 0 0 .26602 9.377 7.959)"/></g></svg>